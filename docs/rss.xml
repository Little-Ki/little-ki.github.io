<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Little-Ki's blog</title><link>https://little-ki.github.io</link><description>此处空无一物</description><copyright>Little-Ki's blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://github.githubassets.com/favicons/favicon.svg</url><title>avatar</title><link>https://little-ki.github.io</link></image><lastBuildDate>Sat, 15 Mar 2025 16:23:46 +0000</lastBuildDate><managingEditor>Little-Ki's blog</managingEditor><ttl>60</ttl><webMaster>Little-Ki's blog</webMaster><item><title>【编码】Lempel-Ziv 分解：无滑动窗LZ77</title><link>https://little-ki.github.io/post/%E3%80%90-bian-ma-%E3%80%91Lempel-Ziv%20-fen-jie-%EF%BC%9A-wu-hua-dong-chuang-LZ77.html</link><description>原文：[ScriptLZ](https://www.uni-ulm.de/fileadmin/website_uni_ulm/iui.inst.190/Lehre/SS14/Datenkompression/ScriptLZ.pdf)

# 1、后缀数组
&amp;emsp;&amp;emsp;对于字符串 $`S`$，它的后缀数组是其所有后缀按字典序排序的数组（也称为字母顺序，字典或词汇顺序），此排序方式由字符集 $`\Sigma`$ 决定的。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90-bian-ma-%E3%80%91Lempel-Ziv%20-fen-jie-%EF%BC%9A-wu-hua-dong-chuang-LZ77.html</guid><pubDate>Tue, 11 Mar 2025 08:52:27 +0000</pubDate></item><item><title>【编码】LZ77</title><link>https://little-ki.github.io/post/%E3%80%90-bian-ma-%E3%80%91LZ77.html</link><description># 简述
&amp;emsp;&amp;emsp;LZ77是以色列计算机科学家Abraham Lempel与 Jacob 在1977 年发表之论文中的无损数据压缩算法。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90-bian-ma-%E3%80%91LZ77.html</guid><pubDate>Tue, 11 Mar 2025 08:11:10 +0000</pubDate></item><item><title>【OpenGL】着色器及数据</title><link>https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91-zhao-se-qi-ji-shu-ju.html</link><description># 术语：&#13;
&gt; 顶点数组对象：Vertex Array Object，VAO，保存了多个顶点数组对象，用于在多个顶点数组间切换.&#13;
&gt; 顶点缓冲对象：Vertex Buffer Object，VBO，储存了单个顶点数组。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91-zhao-se-qi-ji-shu-ju.html</guid><pubDate>Fri, 03 Jan 2025 07:54:44 +0000</pubDate></item><item><title>【OpenGL】纹理</title><link>https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91-wen-li.html</link><description>&gt; 纹理可以是1D / 2D / 3D 以及立方体贴图，用来添加物体的细节。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91-wen-li.html</guid><pubDate>Fri, 03 Jan 2025 07:29:31 +0000</pubDate></item><item><title>【OpenGL】GLSL</title><link>https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91GLSL.html</link><description># 简介&#13;
&amp;emsp;&amp;emsp;GLSL（OpenGL Shading Language） 全称 OpenGL 着色语言，是用来在 OpenGL 中着色编程的语言，也即开发人员写的短小的自定义程序，他们是在图形卡的 GPU上执行的，代替了固定的渲染管线的一部分，使渲染管线中不同层次具有可编程性。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90OpenGL%E3%80%91GLSL.html</guid><pubDate>Fri, 03 Jan 2025 05:49:05 +0000</pubDate></item><item><title>【算法】光栅化</title><link>https://little-ki.github.io/post/%E3%80%90-suan-fa-%E3%80%91-guang-zha-hua.html</link><description>参考：[Rasterization](https://www.scratchapixel.com/lessons/3d-basic-rendering/rasterization-practical-implementation/overview-rasterization-algorithm.html)

# 简述 
&amp;emsp;&amp;emsp;光栅化是将 3D 空间三角形投影至 2D 屏幕空间的过程。</description><guid isPermaLink="true">https://little-ki.github.io/post/%E3%80%90-suan-fa-%E3%80%91-guang-zha-hua.html</guid><pubDate>Thu, 02 Jan 2025 07:23:01 +0000</pubDate></item></channel></rss>